#import "common.typ": *

#show: doc => practice(
  subj: [Алгоритмы и структуры данных],
  title: [Практика 3],
  date: [25 сентября],
  number: 3,
  doc
)

#task("1.b")[]
#solution()[
  Есть какое бинарное дерево выполнения алгоритмы $h = T(n)$.
  $ n <= text("Количество листьев") <= 2^(T(h)) $
  $T(h) >= log n$
]

#task("2")[]
#solution()[
  Бин-поиск по ответу. Проверяем что можно нарезать $>= k$ кусков длины $l in [0, l_max]$.

  Время работы: $Theta(n log l_max)$
]

#task("3")[]
#solution()[
  Строим массив пар $angle.l a_i, i angle.r$, сортируем. бин-поиск по парам запросов $angle.l x, l angle.r, angle.l x, r angle.r$.
]

#task("4")[]
#solution()[
  Разобьем на пары, смержим попарно. Повторим, пока не станет 1 массив. Время работы: на каждом "уровне" $C dot n$. Получим $O(n log k)$.
]

#task("5.a")[]
#solution()[
  Бин-поиск по ответу. $a in [0; "MAX"]$, посчитаем количество элементов, которые меньше $a$. Проверка за $O(log n$, бин-поиск за $O(log "MAX")$. $O(log n dot log "MAX")$.
]

#task("5.b")[]
#solution()[
  Рассмотрим смерженный массив. Посмотрим где располагаются элементы первого массива в нем. Посмотрим на ближайший слева к $k$-той статистики элемент из кажодого массива. Для $i$ из одного массива подбираем нужное количество элементов из второго.
  #todo()
]

#task("5.a")[]
#solution()[
  В лоб: построим массив всех таких сумм и отсортируем
]

#task("5.b")[]
#solution()[
  Указатели на каждом массиве #todo()
]

#task("9")[]
#solution()[
  1. $T(n) = T(ceil.l frac(n, 2) ceil.r) + 1$, $T(n) ~ log n$. Почему единица не помешает: 
     $
       2^k <= n <= 2^(k + 1) \
       T(2^k) = log 2^k  = k \
       k <= T(n) <= k + 1 \
       T(n) ~ k ~ log n
     $
  3. 
    $
      T(n) = T(a) + underbrace(T(n - a), T(a) + T(n - 2a) + (n - a)) + n  =  \
      = T(a) dot floor.l frac(n, a) floor.r + sum_(i = 0)^(floor.l frac(n, a) floor.r) (n - a dot i) = 
      #todo()
    $
  5. 
    $
      T(n) = T(alpha dot n) + T((1 - alpha) dot n)
    $
    Как доказывали мастер теорему. Идем влево $dot alpha$, идем вправо $dot (1 - alpha)$. Если $alpha > frac(1, 2)$. В дереве останутся ветки только с одной стороны.
    $ T(n) ~ n log n$
]
