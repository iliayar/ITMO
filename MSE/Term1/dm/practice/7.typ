#import "/other/typst/practice_mse.typ": *
#import "/MSE/Term1/dm/common.typ": *


#show: doc => practice(
  subj: [Дискретная математика],
  title: [Практика 7],
  date: [22 октября],
  number: 7,
  doc
)

#task()[
  В самолете 150 мест, продали 152 билета. Найти вероятность овербукинга, если пассажир не является с вероятностью $p = 0.01$.
]
#solution()[
  В лоб:
  $ PP("152") = binom(152, 0) 0.01^0 dot 0.99^152 \ 
    PP("151") = binom(151, 1) 0.01^1 dot 0.99^151 \
    PP = PP("151") + PP("152") approx 0.5503
  $

  По теореме Пуассона. $lambda = n p = 152 dot 0.01 = 1.52$
  $ PP(S_n = 1) = (1.52^1 dot e^(-1.52)) / 1! \
    PP(S_n = 0) = (1.52^0 dot e^(-1.52)) / 0! \
    PP approx 0.551
  $
]

#task()[]
#solution()[
  Вероятность что игра закончится на $k$-том шаге $0.5^(k - 1) dot 0.5$. $P("I")$ --- вероятность выигрыша первого игрока.
  $ P("I") = PP(1 "ход") + PP(3 "ход") dots = 0.5^1 + 0.5^3 + 0.5^5 + dots = 0.5 / (1 - 0.5^2) \
    P("I") = PP(2 "ход") + PP(4 "ход") dots = 0.5^2 + 0.5^4 + 0.5^6 + dots = 0.5^2 / (1 - 0.5^2)
  $
]

#task()[]
#solution()[
  Веротяность выбрать каждый коробок $p_1 = p_2 = 1/2$. Всего испытаний $2N - r$.
  $ PP = (binom(2N - r, N) p_1^N p_2^(N - r)) dot 2 dot 1/2 $
  На два умножаем т.к. нужно учесть ситуацию когда они поменяются местами. И еще на $1/2$ (?).
]

#task()[]
#solution()[
  $p = 1/200$. $p("ничего не поймал")$
  $ PP = binom(200, 100) (199/200)^100 dot (1/200)^0 $
  $k$ сильно меньше чем $n$, поэтому можно по теореме Пуассона $lambda = 100 dot 1/ 200= 1/2$
  $ PP = e^(-0.5) approx 0.606 $
  Еще отрицание.
]

#task()[]
#solution()[
  $p = 1/4$, $n = 300$, $k = 75$. $k$ близки к $n p$, поэтому пользуемся локальной теоремой Муавра-Лапласа.
  $ x_k = (k - n p) / sqrt(n p q) = 0 $
  $ PP(S_n = k) = 1 / sqrt(2 pi n p q) e^(-x_k^2 / 2) approx 0.5 $
  В лоб (?): $PP = binom(300, 75) (0.25)^75 (0.75)^225$
]

#task()[]
#solution()[
  $ PP(lr(|S_n / 4040 - 1/2|)  <= lr(|2048 / 4040 - 1/2|)) = PP(-28 / sqrt(n p q) <= (S_n - overbrace(2020, n p)) / sqrt(n p q) <= 28 / sqrt(n p q)) = 2 Phi(28 / sqrt(1010)) - 1
  $
]

#task()[]
#solution()[
  $ 2 Phi(alpha / sqrt(n p q)) - 1 = 0.999 ==> underbrace(Phi(alpha / sqrt(n p q)), 3.27) = 0.9995 $
  $ alpha = 103.dots $
]
