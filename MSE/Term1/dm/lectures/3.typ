#import "/other/typst/lecture_mse.typ": *
#import "/MSE/Term1/dm/common.typ": *

#show: doc => lecture(
  subj: [Дискретная математика],
  title: [Лекция 3],
  date: [24 сентября],
  number: 3,
  doc
)

= Комбинаторный способ доказательства

#example()[
  $ binom(n, k) = binom(n - 1, k) + binom(n - 1,k - 1) $
  Придумаем два способа решения одной и той же задачи. Формулы для решений будут эквивалентны, т.к.
  решаем одну и ту же задачу
]
#proof()[
  #task()[
      В магазине $n$ различных шоколадок, хотим купить $k$ из них. Сколько способов?
  ]
  #solution()[
    По определению $binom(n, k)$
  ]
  #solution()[
    Разобьем на два не пересекающихся подмножества. Пусть есть одна особенная шоколадка. Тогда два случая: купили эту особенную или нет.
    - Осталось добрать $k - 1$ из оставшихся $n$ --- $binom(n - 1, k - 1)$
    - $binom(n - 1, k)$
  ]
]

#example()[
  Тождество Вандермонда
  $ sum_(k = 0)^l binom(n, k) binom(m, l - k) = binom(n + m, l) $
]
#proof()[
  #task()[
    Есть $n$ мальчиков и $n$ девочек, сколько способов выбрать команду размера $l$.
  ]
  #solution()[
    Тривиально правая часть тождества
  ]
  #solution()[
    Разобьем по количеству мальчиков в команде (от $0$ до $n$).
    $ sum_(k = 0)^l binom(n, k) binom(m, l - k) $
  ]
]

#example()[
    Граничное условие
    $ binom(n, k) = 0, quad k > n $
]

#example()[
    Начальное условие
    $ binom(n, 0) = 1 $
]

#example()[
  Треугольник Паскаля
  #todo(note: "Картинка")
  Количество путей
]

#lemma()[
  Бином Ньютона
  $ (x + y)^n = sum_(k = 0)^n binom(n, k) x^k y^(n - k) $
  Коэффициент --- сколько способов тыкнуть в $x$ $k$ раз
]
#corollary_lemma()[
  $ x = y = 1 quad sum_(k = 0)^n = 2^n $
  Количество подмножеств
]
#corollary_lemma()[
  $ x = -1 thick y = 1 quad 0 = sum_(k = 0)^n binom(n, k) (-1)^k quad n != 0 $
]

= Перестановки с повторениями
Может быть несколько элементов одного типа, но неразличимых

#definition()[
  Пусть имеется $k_1$ элементов *I* типа, $k_2$ элементов *II* типа, #math.dots, $k_l$ элементов $l$ типа. Количество различных перестановок этих $n$ элементов называется *перестановки с повторениями*
]
#symb()[
  $ binom(n, k_1, k_2, dots, k_l) = P(n; k_1, k_2, dots, k_l) $
]

#statement()[
  $ binom(n, k_1, k_2, dots, k_l) = frac(n!, k_1! k_2! dots k_l!) $
]
#proof("На примере")[
  Возьмем $X_1, X_2, X_3, Y_1, Y_2, Z_1, Z_2$. Количество перестановок $n!$. Теперь сотрем индексы у $X$, перестали различать некоторые перестановки. Общее количество уменьшилось в $k_X!$ раз.
]
#proof("Альтернативное")[
  Расставляем элементы одного типа по очереди на $n$ позиций:
  $ binom(n, k_1) binom(n - k_1, k_2) binom(n - k_1 - k_2, k_3) dots binom(n - k_1 - k_2 - dots - k_(l - 1), k_l) $
]

#remark()[
  $ binom(n, k_1, k_2) = binom(n, k_1) $
  Т.к. $k_2$ однозначно восстанавливается из $n$ и $k_1$
]

#remark()[
  $ (x_1 + x_2 + dots + x_l)^n =  sum_(#stack($k_i >= 0$, [#v(0.5em)$sum k_i = n$])) underbrace(binom(n, k_1, k_2, dots, k_l), #text("Полиномальный\nкоэффициент")) x_1^(k_1) x_2^(k_2) dots x_l^(k_l) $
  *Полиномиальная формула*
]

= Сочетания с повторениями
Количество способов выбрать $k$ элементов из $n$-элементного множества, с учетом того что порядок не важен и элементы могут повторяться. Количество $k$-мультимножеств над $n$ элементным множеством

#symb()[
  // FIXME
  $ multiset(n, k) = overline(C_n^k) $
]
#statement()[
  $ multiset(n, k) = binom(n + k - 1, k) $
]
#proof()[
  Пусть имеется $n$ различных ящиков, в которые распределяем $k$ одинаковых шариков. Сколько способов это сделать. Мультимножество над ящиками задает раскладку шариков по ящикам:
  $ multiset(n, k) $

  Расставим $k - 1$ перегородок между шариками --- это также задает раскладку шариков по ящикам. Шарики --- $0$, перегородки --- $1$. Составляем бинарную строку длины $n + k - 1$ в которых $k$ нулей:
  $ binom(n + k - 1, k) $
]
#remark()[
  $ multiset(n, k) = binom(n + k - 1, k) = frac((n + k - 1)!, k! (n - 1)!) = frac(n dot (n + 1) dot dots dot (n + k - 1), k!) = frac(n^((k)), k!) $
  , где $n^((k))$ --- возрастающая факториальная степень
]

= Обзор

#remark()[
  Урновая схема. Есть $n$ _различимых_ шариков в урне, выбираем $k$ из них.
  #table(
    columns: 3,
    align: center,
    stroke: none,
    [], table.vline(), [Важен порядок], table.vline(), [Не важен порядок],
    table.hline(),
    [Шары не возвращаются], [Размещения без повторений \ $A^k_n$], [$binom(n, k)$],
    table.hline(),
    [Шары возвращаются], [$n^k$], [$multiset(n, k)$],
  )
]

#remark()[
  Схема шаров и ящиков. Есть $n$ различимых ящиков и $k$ шаров, хотим разложить шары по ящикам
  #table(
    columns: 3,
    align: center,
    stroke: none,
    [], table.vline(), [Шары различимы], table.vline(), [Шары не различимы],
    table.hline(),
    [Максимум 1 шар в ящик], [$A_n^k$], [$binom(n, k)$],
    table.hline(),
    [Без ограничений], [$n^k$], [#box($multiset(n, k)$)],
  )
]

#remark()[
  Составление числа (единицы по разрядам) --- Схема шаров и ящиков (шары не различимы, без ограничений)
]
