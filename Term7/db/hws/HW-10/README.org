


* 1
** 1
#+begin_src sql
START TRANSACTION READ ONLY ISOLATION LEVEL READ COMMITTED;

-- Аномалии:
--   - Косая запись - нет, read only
--   - Фантомная запись - нет, один SELECT
--   - Неповторяемое чтение - нет, один SELECT
--   - Грязное чтение - есть, можем прочитать, к примеру,
--     что место куплено, хотя транзакция не завершена
-- Избавляемся от аномалий:
--   - Грязное чтение
-- Достаточно уровня изоляции Read commited
#+end_src

** 2
#+begin_src sql
START TRANSACTION READ WRITE ISOLATION LEVEL SNAPSHOT;

-- Аномалии:
--   - Косая запись - нет, изменяем данные только в Tickets
--   - Фантомная запись - есть, между проверкой что место свободно
--     и резервированием может быть добавление записи в Tickets
--   - Неповторяемое чтение - есть, читаем несколько раз из Flights
--   - Грязное чтение - есть, можем прочитать, к примеру,
--     что место куплено, хотя транзакция не завершена
-- Избавляемся от аномалий:
--   - Фантомная запись
--   - Неповторяемое чтение
--   - Грязное чтение
-- Достаточно уровня изоляции Snapshot
#+end_src

** 3
#+begin_src sql
START TRANSACTION READ WRITE ISOLATION LEVEL REPEATABLE READ;

-- Аномалии:
--   - Косая запись - нет, изменяем данные только в Tickets
--   - Фантомная запись - нет, не может произойти мешающие добавление данных в Tickets
--   - Неповторяемое чтение - есть, читаем несколько раз из Flights
--   - Грязное чтение - есть, можем прочитать, к примеру,
--     что место куплено, хотя транзакция не завершена
-- Избавляемся от аномалий:
--   - Неповторяемое чтение
--   - Грязное чтение
-- Достаточно уровня изоляции Repeatable read
#+end_src

** 4
#+begin_src sql
START TRANSACTION READ WRITE ISOLATION LEVEL SNAPSHOT;

-- Аномалии:
--   - Косая запись - нет, изменяем данные только в Tickets
--   - Фантомная запись - есть, между проверкой что место свободно
--     и резервированием может быть добавление записи в Tickets
--   - Неповторяемое чтение - есть, читаем несколько раз из Flights
--   - Грязное чтение - есть, можем прочитать, к примеру,
--     что место куплено, хотя транзакция не завершена
-- Избавляемся от аномалий:
--   - Фантомная запись
--   - Неповторяемое чтение
--   - Грязное чтение
-- Достаточно уровня изоляции Snapshot
#+end_src

** 5
#+begin_src sql
START TRANSACTION READ WRITE ISOLATION LEVEL REPEATABLE READ;

-- Аномалии:
--   - Косая запись - нет, изменяем данные только в Tickets
--   - Фантомная запись - нет, не может произойти мешающие добавление данных в Tickets
--   - Неповторяемое чтение - есть, читаем несколько раз из Flights
--   - Грязное чтение - есть, можем прочитать, к примеру,
--     что место куплено, хотя транзакция не завершена
-- Избавляемся от аномалий:
--   - Неповторяемое чтение
--   - Грязное чтение
-- Достаточно уровня изоляции Repeatable read
#+end_src

** 6
#+begin_src sql
START TRANSACTION READ ONLY ISOLATION LEVEL SNAPSHOT;

-- Аномалии:
--   - Косая запись - нет, read only
--   - Фантомная запись - есть, может произойти запись в Tickets
--   - Неповторяемое чтение - есть, читаем несколько раз из Flights
--   - Грязное чтение - есть, можем прочитать, к примеру,
--     что место куплено, хотя транзакция не завершена
-- Избавляемся от аномалий:
--   - Фантомная запись
--   - Неповторяемое чтение
--   - Грязное чтение
-- Достаточно уровня изоляции Snapshot
#+end_src

** 7
#+begin_src sql
START TRANSACTION READ ONLY ISOLATION LEVEL SNAPSHOT;

-- Аномалии:
--   - Косая запись - нет, изменяем данные только в Tickets
--   - Фантомная запись - есть, может произойти запись в Tickets
--   - Неповторяемое чтение - есть, читаем несколько раз из Flights
--   - Грязное чтение - есть, можем прочитать, к примеру,
--     что место куплено, хотя транзакция не завершена
-- Избавляемся от аномалий:
--   - Фантомная запись
--   - Неповторяемое чтение
--   - Грязное чтение
-- Достаточно уровня изоляции Snapshot
#+end_src

** 8
#+begin_src sql
START TRANSACTION READ ONLY ISOLATION LEVEL SNAPSHOT;

-- Аномалии:
--   - Косая запись - нет, изменяем данные только в Tickets
--   - Фантомная запись - есть, может произойти запись в Tickets
--   - Неповторяемое чтение - есть, читаем несколько раз из Flights
--   - Грязное чтение - есть, можем прочитать, к примеру,
--     что место куплено, хотя транзакция не завершена
-- Избавляемся от аномалий:
--   - Фантомная запись
--   - Неповторяемое чтение
--   - Грязное чтение
-- Достаточно уровня изоляции Snapshot
#+end_src
* 2
** 0
1. Пользователь предоставляет логин (:UserId) и пароль (:Pass)
2. Пользователь выбирает рейс (:FlightId)
3. Получаем список доступных к покупке или бронированию для этого пользователя
4. Пользователь выбирает место (:SeatNo) и выбирает забронировать или купить
5. Запрос в зависимости от того что выбрал пользователь, забронировать
   или купить и от того забронировано ли данное место
   пользователем. Если запрос не выполнился успешно, нужно запросить
   список мест заного.

** 1
#+begin_src sql
START TRANSACTION READ ONLY ISOLATION LEVEL READ COMMITTED;
SELECT SeatNo, BookedUntil FROM FreeOrReservedTickets
  WHERE FlightId = :FlightId
  AND (UserId = :UserId OR UserId IS NULL);
COMMIT;
#+end_src

** 2
1. Пользователь вводит логин и пароль, а затем номер рейса
2. Делается запрос на получение списка свободных или зарезервированных
   этим пользователейм мест, пользователь видит эти места и их статус (свободно/зарезервировано).
3. Пользователь выбирает место и
   1. покупает его. Если место было зарезервировано, выполняется запрос 4, если нет то запрос 2
   2. резервирует его (только для свободных мест). Выполняется запрос 1
   3. Продлевает бронь (только если место было забронировано). Выполняется запрос 3
4. Если запрос завершился с ошбкой, просим пользователя перезапросить
   список мест, т.к. ошибка означает что место уже забронировано, либо
   куплено.
** 3
#+begin_src sql
START TRANSACTION READ ONLY ISOLATION LEVEL SNAPSHOT;
  SELECT Reserve(:UserId, :Pass, :FlightId, :SeatNo);
COMMIT;

START TRANSACTION READ ONLY ISOLATION LEVEL SNAPSHOT;
  SELECT BuyFree(:FlightId, :SeatNo);
COMMIT;

START TRANSACTION READ ONLY ISOLATION LEVEL REPEATABLE READ;
  SELECT ExtendReservation(:UserId, :Pass, :FlightId, :SeatNo);
COMMIT;

START TRANSACTION READ ONLY ISOLATION LEVEL REPEATABLE READ;
  SELECT BuyReserved(:UserId, :Pass, :FlightId, :SeatNo);
COMMIT;
#+end_src
