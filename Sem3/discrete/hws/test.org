
#+LATEX_CLASS: general
#+TITLE: Testing org to pdf
#+AUTHOR: Ilya Yaroshevskiy

* Test org to pdf
** Code blocks

#+BEGIN_SRC haskell
main = putStrLn "Hello World!"
#+END_SRC

#+BEGIN_SRC C
#include <stdio.h>

int main() {
    printf("Hello World!")
    return 0;
}
#+END_SRC

#+BEGIN_SRC python
print("Hello World!")
#+END_SRC

#+BEGIN_SRC bash
echo "Hello World!"
#+END_SRC

#+BEGIN_SRC clojure
(print "Hello World!")
#+END_SRC


#+CAPTION: C++ Hello world
#+BEGIN_SRC C++ -l "(ref:%s)"
#include <iostream>

int main() {
    std::cout << "Hello Wordl!" << std::endl; (ref:sc)
    return 0;
}
#+END_SRC

Tes reference [[(sc)]]

#+name: test-python
#+BEGIN_SRC python :results value
return "Test"
#+END_SRC

#+BEGIN_SRC python :var s=test-python :results value
return "Wow it's: {}".format(s)
#+END_SRC

#+RESULTS:
: Wow it's: Test

** Graphs

#+BEGIN_SRC dot :file TMP.png :cmdline -Kdot -Tpng
  digraph {
      a -> b [color=blue, label="test"];
      b -> c;
      b -> d;
      d -> e;
      d -> f;
  }
#+END_SRC

#+CAPTION: Test1
#+ATTR_LATEX: :scale 0.5 :placement [H]
#+RESULTS:
[[file:TMP.png]]

#+BEGIN_SRC dot :file TMP2.png :cmdline -Kdot -Tpng
  graph {
      a -- b;
  }
#+END_SRC

#+CAPTION: Test 2
#+ATTR_LATEX: :scale 0.5 :placement [H]
#+RESULTS:
[[file:TMP2.png]]

\begin{aligned}
\[e^{i \pi} = 1\]
\end{aligned}


And now *Русские вперед*
** Plots

#+BEGIN_SRC gnuplot :file plot1.png
reset

set title "Putting it All Together"

set xlabel "X"
set xrange [-8:8]
set xtics -8,2,8


set ylabel "Y"
set yrange [-20:70]
set ytics -20,10,70

f(x) = x**2
g(x) = x**3
h(x) = 10*sqrt(abs(x))

plot f(x) w lp lw 1, g(x) w p lw 2, h(x) w l lw 3
#+END_SRC

#+RESULTS:
[[file:plot1.png]]


#+TBLNAME: test-table
#+BEGIN_SRC python :results value
import math
import numpy as np
y = lambda x: x**2
X = list(np.arange(-10, 10, 0.25))
Y = []
for x in X:
    Y += [y(x)]
return list(zip(X, Y))
#+END_SRC

#+BEGIN_SRC gnuplot :var data=test-table :file plot2.png
plot data
#+END_SRC

#+RESULTS:
[[file:plot2.png]]

#+BEGIN_SRC python :var data=test-table
return data[1]
#+END_SRC

#+RESULTS:
| -9.75 | 95.0625 |


#+BEGIN_SRC python :results file :exports results
  import matplotlib
  matplotlib.use('Agg')
  import matplotlib.pyplot as plt
  filename = '13_2.png'
  plt.plot([0, 1, 1, 2], [1, 1, 0, 0])
  plt.ylabel("$hash(s[i : k]) = hash(j : k)$")
  plt.xlabel("$s_i$")
  plt.yticks([0, 1])
  plt.xticks([0, 1, 2])
  plt.savefig(filename)
  return filename
#+END_SRC

#+RESULTS:
[[file:13_2.png]]
** Tikz
\begin{tikzpicture}
\draw[gray, thick] (-1,2) -- (2,-4);
\draw[gray, thick] (-1,-1) -- (2,2);
\filldraw[black] (0,0) circle (2pt) node[anchor=west] {Intersection point};

\end{tikzpicture}
