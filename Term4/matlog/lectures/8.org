#+LATEX_CLASS: general
#+TITLE: Лекция 8
#+AUTHOR: Ilya Yaroshevskiy

* Исчесление предиктов
#+ATTR_LATEX: :options [Геделя о полноте ИП]
#+begin_theorem org
У любого н.м.з.ф. (непротиворечивого множества замкнутых формул) ИП существует модель
#+end_theorem
#+begin_theorem org
Если формула \(\phi\) --- замкнутая формула ИП \\
_Тогда_ найдется \(\psi\) --- замкнутая формула ИП, что \(\vdash \varphi \to \psi\) и \(\psi \to \varphi\). \(\psi\) --- с поверхностными кванторами
#+end_theorem
#+begin_proof org
См. ДЗ
#+end_proof
#+begin_remark org
Рассмотрим \(\Gamma\) --- н.м.з.ф. --- рассмотрим \(\Gamma'\) --- полное расширение \(\Gamma\). Пусть \(\varphi\) --- фомула из \(\Gamma'\), тогда найдется \(\psi in \Gamma'\), что \(\psi\) --- с поверхностными кванторами и \(\vdash \varphi \to \psi\), \(\vdash \psi \to \varphi\)
#+end_remark
#+ATTR_LATEX: :options [Доказательство теоремы Геделя о полноте ИП]
#+begin_proof org
Рассмотрим множество констант(нуль местных функциональных символов) --- \(d^i_j\). Построим \(\{\Gamma_j\}: \)
\[ \Gamma' = \Gamma_0 \subseteq \Gamma_1 \subseteq \Gamma2 \subseteq \dots \subseteq \Gamma_j \subseteq \dots \]
Переход \(\Gamma_j \Rightarrow \Gamma_{j + 1}\): рассмторим все формулы из \(\Gamma_j\): \(\{\gamma_1, \gamma_2, \gamma_3, \dots\}\)
1. \(\gamma_i\) ---  формула без кванторов --- оставим на месте
2. \(\gamma_i \equiv \forall x.\varphi\) --- добваим к \(\Gamma_{j + 1}\) все формулы вида \(\varphi[x:=\Theta]\), где \(\Theta\) --- составлен из всех ф.с. ИП и констант вида \(d_1^k,\dots,d^k_j\)
3. \(\gamma_i \equiv \exists x.\varphi\) --- добавим одну формулу --- \(\varphi[x:=d^i_{j + 1}]\)

   
- *Утв. 1* :: \(Gamma_{i + 1}\) непр., если \(\Gamma_i\) --- непр. \\
  Докажем от противного. \(\Gamma_{i + 1} \vdash \beta \& \neg \beta\)
  \[ \Gamma_i, \gamma_1, \dots, \gamma_n \vdash \beta \& \neg \beta \quad \gamma_i \in \Gamma_{i + 1} \setminus \Gamma_i \]
  \[ \Gamma_i \vdash \gamma_1 \to \gamma_2 \to \dots \to \gamma_n \to \beta \& \neg \beta \]
  \(\gamma_i\) --- замкнутое \(\implies\) т. о дедукции. Докажем что \(\Gamma_i \vdash \beta \& \neg \beta\) по индукции.
  \[ \Gamma_i \vdash \gamma \to \varepsilon \]
  Покажем \(\Gamma_i \vdash \varepsilon\), т.е. \(\gamma\) получен из \(\forall x. \xi\) или \(\forall x. \xi\) \(\in \Gamma_i\)
  - *\((\forall x. \xi)\)* ::
    Заметим, что \(\Gamma_i \vdash \forall x.\xi\)
    \[ \begin{array}{ll}
    \vdots & \text{по условию} \\
    \gamma \to \varepsilon & \text{по построению }\Gamma_{i + 1} \\
    \forall x.\xi \to (\underbrace{\xi[x:=\Theta]}_\gamma) & \text{(акс. 11)} \\
    (\forall x.\xi) \to \varepsilon & \left|\begin{matrix} \eta \to \xi \\ \xi \to \kappa \end{matrix}\right. \implies \eta \to \kappa\\
    \forall x.\xi & \\
    \varepsilon & \text{(M.P.)}
    \end{array} \]
  - *\((\exists x. \xi)\)* ::
    \[ \Gamma_i \vdash \overbrace{\xi[x:=d^k_{i + 1}]}^\gamma \to \varepsilon \]
    Заметим, что \(d^k_{i + 1}\) не входит в \(\varepsilon\). Заменим все \(d^k_{i + 1}\) в доказательстве на \(y\) --- новая перменная
    \[ \Gamma_i \vdash \xi[x:=y] \to \varepsilon \]
    \[ \begin{array}{ll}
    \exists y. \xi[x:=y] \to \varepsilon & \\
    (\exists x. \xi x) \to (\exists t. \xi[x:=y]) & \\
    (\exists x.\xi) \to \varepsilon & \\
    \exists x. \xi & \\
    \varespilon & 
    \end{array}\]
    \[ \fixme \]
- *Утв. 2* :: \(\Gamma^*\) --- непр. \(\Gamma_0 \vdash \gamma_1 \to \dots \to \gamma_n \to \beta \& \neg \beta\)
  \[ \Gamma_{\max_i(0..n)} \vdash \beta \& \neg \beta \]
  Значит \(\Gamma_\max\) --- противоречиво, \(\Gamma^\triangle = \Gamma^*\) без кванторов \\
  _Значит_ у \(\Gamma^\triangle\) есть модель \(M\) 
- *Утв. 3* :: \(\gamma \in \Gamma'\), то \(\llb \gamma \rrb_M = \text{И}\) \\
  Индукция по количеству кванторов в \(\gamma\). Рассмторим:
  1. \(\gamma \equiv \forall x. \delta\) \\
     \(\llb \forall x. \delta \rrb\), если \(\llb \delta \rrb^{x := \kappa} = \text{И}, \kappa \in D\). Рассмотри \(\llb \delta \rrb^{x := \kappa},\ k \in D\). \(\kappa\) содержит константы и ф-с, \(\kappa\) осмысленно \(\Gamma_p\). \(\delta\) добавлена на шаге \(q\). Рассмотрим шаг \(\Gamma_{\max(p, q)}\) \(\forall x. \delta: \Gamma_{\max(p, q) + 1}\) добавлена \(\delta[x:=\kappa]\). \(\delta[x:=\kappa]\) --- меньше на 1 квантор, \(\llb \delta[x:=k] \rrb = \text{И}\)
  2. \(\gamma \equiv \exists x. \delta\) --- аналогично
#+end_proof

#+begin_theorem org
ИП неразрешимо
#+end_theorem
#+begin_definition org
*Язык* --- множество слов. Язык \(\mathcal{L}\) разрешим, если существует \(A\) --- алгоритм, что по слову \(w\): \\
\(A(w)\) --- останавливается в `1`, если \(w \in \mathcal{L}\) и `0`, если \(w \not\in \mathcal{L}\)
#+end_definition
#+begin_remark org
Проблема останова: не существует алгоритма, который по программе для машина Тьюринга ответит, остановится она или нет. \\
Пусть \(\mathcal{L}'\) --- язык всех останов программы для машины Тьюринга. \(\mathcal{L}'\) неразрешим
#+end_remark
#+begin_remark org
=[a, b, c, d, e] = cons(a, cons(b, cons(c, cons(d, cons(e, nil)))))= \\
\(A\) --- алфавит ленты
\[ \left.\begin{array}{l}
S_x,\ x \in A \\
e \text{ --- } \text{nil}
\end{array}\right\} \text{ --- } 0\text{-местные функциональные символы}\]
\[ C(a, b) \text{ --- } 2\text{-местные функциональные символы} \]
\(b_s, s \in \mathcal{S}\) --- множество всех состояний, \(b_0\) --- начальное состояние.
\[ C(s_c, C(s_b, C(s_a, e))) \quad C(s_d, C(s_e, e)) \]
Заведем предикат, которых отвечает было ли состояние в процессе. Начальное состояние --- машина Тьюринга запущена на строке \(\alpha\):
\[ R(\alpha, e, b_0) \]
Переход:
\[ (s_x, b_s) \to (s_y, b_t, \leftrightarrow) \]
\[ (s_x, b_s) \to (s_y, b_t, \leftarrow) \]
Если пермещение законно, то можем построить для каждого такие правила:
\[ \forall z. \forall w. R(C(s_x, z), w, b_s) \to R(C(s_y, z), w, b_t) \]
\[ \dots  R(z, C(s_y, w), b_t)\]
Сделаем коньюнкцию вех эти правил: \(R(\dots)\&R(\dots)\&\dots\&R(\dots) \to \exists z. \exists . R(z, w, b_\triangle)\)
\fixme
#+end_remark
#+begin_examp org
\-
1. \(R(C(s_k, e), e, b_0)\) --- доказуемо(мы так сказали)
   Двинем голвку вправо:
   \[ \forall x. \forall y. R(C(s_k, x), y, b_0) \to R(x, C(s_k, y), b_1) \]

#+end_examp
