#+PUBNOTE:html
#+SETUPFILE: ../../level-subj.org
#+title: Заметки к экзамену
#+OPTIONS: num:nil

* Историческая справка
Если узел A хочет поговорить с узлом B, в промежуточных узлах
буквально соединялся физически провод (линк), это называется *канальной
коммутацией*.

Будем разбивать данные на кусочки, предавать следующему узлу вместе с
информацией куда надо доставить --- *пакетная коммутация*. Есть
некоторые проблемы:
- У узла может забится буфер
- Пакеты могу призордит в другом порядке
- Пакет может заблудиться

* База
Интернет --- мнго независимых сетей, которые общаются друг с другом.

Виды линков:
1. Витая пара
2. Коаксиальные провода (как кабельное тв)
3. Оптический кабель (пластик/стекло)
4. Радио (WiFi, 4g, спутники)

Две задачи:
- Форвардинг (пересылка) \\
  Кому дальше пересылать
- Маршрутизация \\
  Строить таблицы для форвардинга

/Аналогия/: Маршрутищация --- построить путь из одного города в другой,
форвардинга --- для каждого промежуточного города, по какой дороге из
него выехать

*Congestion controls* --- решение проблемы забития очереди, когда
 входной канал шире чем выходной. Когда очередь заканчивается, пакеты
 теряются. Хочется знать с какой скороситью отправлять, чтобы очередей
 не возникало


Протоколы:
- RFC: Request for Comments
  Сначала появляется драфт, на него не стоит опираться
- IETF: Internet Engineering Task Force
- ISO: International Organization for Standartiozation
  Стандарты, Например ISO 8601 (формат даты)

Типичные слои:
- Applicaiton: HTTP, IMAP, DNS
- Transport: TCP, UDP
- Network: IP, кастомные внутри железок \\
  Марщрутиация пакетов от отправителя к получателю
- Link: Ethernet, WiFi, PPP (DSL, Dial-Up) \\
  Передача данных между соседними узлами
- Physical

*OSI* model:
- L7 :: Application
- L6 :: Presentation
- L5 :: Session
- L4 :: Transport
- L3 :: Network
- L2 :: Link
- L1 :: Physical

* L3 IP
- IPv4
  32 bits \\
  /Пример/: =87.250.250.242=
- IPv6
  128 bits \\
  /Примеры/:
  - =2a02:06b8:0000:0000:0000:0000:0002:0242=
  - =2a02:6b8::2:242=
  - =::ffff:87.250.250.242=

IP Network:
Зафиксируем префикс сети. /Пример/:

| Address   | =87.250.250.0=    |
| Netmask   | =255.255.254.0=   |
| Wildcard  | =0.0.1.255=       |
| Network   | =87.250.250.0/23= |
| Hostmin   | =87.250.250.1=    |
| Hostman   | =87.250.251.254=  |
| Broadcast | =87.250.251.255=  |

Для сети =/31= можно использовать оба адреса, не смотря на то что они
broadcast и нулевой.

*Маршрутизация*. /Пример/:
#+begin_src 
192.168.99.0/24 dev wlan0
0.0.0.0/0 via 192.168.99.1  
#+end_src
=192.168.99.17= в первое правило

Если нужно отправит по адресу, отправляем по наиболее совпадающему правилу. /Пример/:
#+begin_src 
10.0.0.0/8 via 192.168.1.1
10.0.0.0/9 via 192.168.1.4
10.1.0.0/16 via 192.168.1.2
10.1.2.0/24 via 192.169.1.3  
#+end_src

- 10.1.3.0 во второе правило
- 10.10.10.10 во второе
- 10.200.1.1 в первое

*Как получить IP*: IANA выдает IP адреса.

** Специальные IP адреса
- Loopback
  - =127.0.0.0/8=
  - =::1/128=
- =0.0.0.0/8= (=::/128=)
Приватные адресы для локальной сети
- =192.168.0.0/16=
- =172.16.0.0/12=
- =10.0.0.0/8=
- =100.64.0.0/10=
- =fd00::/8= \\
  Должны быть вида =fd:<56 случайных бит>::/64=

Link local (Значат что не настроено): 
- =169.254.0.0/16=
- =fe80::/10=


Broadcast:
- =87.250.250.0/23=
  - =82.250.251.255= --- Directed broadcast (работает только в локальной сети)
- =255.255.255.255/32= --- Local network broadcast (работает только в локальной сети)

Multicast:
- =224.0.0.0/4=
  - =224.0.0.1= --- подписка на адрес в этой сети
- =ff00::/8=

[[file:1.png]]

| Version              | 4 либо 6                             |
| IHL                  | длина заголовка                      |
| Next Header          | Что дальше: TCP, UDP, расширение, .. |
| Total/Payload length | Размер после/вместе с заголовком     |

Минимальный размер
- IPv4 =768= байт
- IPv6 =1506= байт

Flags (More Fragments), Fragment offset --- фрагментация пакета. Если
получатель не поддреживает фрагменты, то это проблема клиента. Решение
--- уменьшить размер пакета. Можно поставить флаг, чтобы промежуточные
узлы не фрагментировали пакет

/NB/: Jumbograms --- переписать размер пакета, гораздо большим числом
** Nat
Как ходить в интернет с локальным адресом.
[[file:2.svg]]

** ICMP
Поверх протокола IP.
- Echo request
- Echo reply
- Destination unreachable
  - Destination host unreachable - не дошел
  - Destionation port unreachable - дошел до конечной точки, но не смог отдать на уровень выше
  - Destination network unreachable - не дошел
  - Fragmentation required - пакет слишком большой
- Time Exceeded
- +Traceroute+ --- Все промежуточные узлы должны отправить обратно пакет

* L2
Ethernet, WiFi.

[[file:3.svg]]

Broadcast MAC Address: =ff:ff:ff:ff:ff:ff=

Как передаются эти сообщения. Компьютеры подключены к коробочке. Коробочки бывают разные:
- Хаб (L1)
- Коммутатор (свитч) L2 \\
  Запоминает MAC адрес для каждого порта, то есть получатель должен
  отправить что-то, чтобы его запомнили. Есть некоторые проблемы с циклами
- Маршрутизатор L3

Хотим узнавать по IP адресу MAC адрес. Отправляем ARP запрос на MAC
broadcast: Who has =1.2.3.4=? Если такое устройство есть, оно отправляет
нам свой MAC.

/NB/: =arp -n= --- получить локальную таблицу MAC адресов

Для IPv6 NDP (Neighbor Discrovery Protocol). Работает поверх IP.
- Address resolution
- Router discovery
- Redirection

** DHCP
Спросить у сети, какой адрес можно взять, кто роутер, какие
DNS. Работает поверх UDP. Отправляем с адреса =0.0.0.0= на
=255.255.255.255=. /Роутер/ выдает адрес и сразу шлет на него пакет.

[[file:4.svg]]
