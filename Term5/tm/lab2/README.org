* Лабораторная 2. Вариант 10. Заголовок функции в Си
** Условие
Заголовок функции в Си. Заголовок начинается именем возвращаемого типа
или словом "~void~", далее идет имя функции, скобка, затем разделенные
запятой описания аргументов. Переменная может быть указателем, в этом
случае перед ней идет звездочка (возможны и указатели на указатели, и
т. д.). Аргументов может быть несколько.  Используйте один терминал
для всех имен переменных и имен типов. \\
Пример: ~int fib(int n);~
** Отчет
Токены:
#+begin_example
LPAREN:   : '('
RPAREN:   : ')'
ASTERISK  : '*'
COMMA     : ','
IDENTIFER : '[a-zA-Z_][a-zA-Z0-9_]*'
END       : The end of input
#+end_example

Грамматика:
#+begin_example
DECLRATION -> IDENTIFIER IDENTIFIER ( ARGS ) ;
ARGS       -> ARG ARGS_REST
ARGS       -> EPS
ARGS_REST  -> , ARG ARGS_REST
ARGS_REST  -> EPS
ARG        -> IDENTIFIER POINTER IDENTIFIER
POINTER    -> * POINTER
POINTER    -> EPS
#+end_example


| Нетерминал   | Описание                                                         |
|--------------+------------------------------------------------------------------|
| DECLRATATION | Объявление функции в C                                           |
| ARGS         | Аргументы функции                                                |
| ARGS_REST    | Аргументы функции, следующие за первым, с предшествующей запятой |
| ARG          | Один аргумент функции                                            |
| POINTER      | 0 или больше символов '*' обозначающий, что аргумент - указатель |


|             | FIRST          | FOLLOW     |
|-------------+----------------+------------|
| DECLARATION | IDENTIFIER     | END        |
| ARGS        | EPS IDENTIFIER | ')'        |
| ARGS_REST   | EPS ','        | ')'        |
| ARG         | IDENTIFIER     | ',' ')'    |
| POINTER     | EPS '*'        | IDENTIFIER |

** Доп
Возвращаемый тип указатель

Грамматика:
#+begin_example
DECLRATION -> IDENTIFIER POINTER IDENTIFIER ( ARGS ) ;
ARGS       -> ARG ARGS_REST
ARGS       -> EPS
ARGS_REST  -> , ARG ARGS_REST
ARGS_REST  -> EPS
ARG        -> IDENTIFIER POINTER IDENTIFIER
POINTER    -> * POINTER
POINTER    -> EPS
#+end_example
