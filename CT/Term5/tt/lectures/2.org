#+setupfile: setup.org
#+TITLE: Лекция 3
#+date: 21 сентября

#+NAME: Бестиповое лямбда-исчисление
#+begin_definition org
*Пред \lambda-терм*:
1. \(x\) --- переменная
2. \(L\ L\) --- аппликация
3. \(\lambda x. L\) --- абстракция
#+end_definition

#+NAME: Бестиповое лямбда-исчисление_remark
#+begin_remark
\-
1. \(\lambda a. a\)
2. \(\lambda b. b\)
Хотим чтоб не отличались
#+end_remark

#+NAME: Общие определения альфа-эквивалентность
#+begin_definition org
\(\alpha\)-эквивалентность. \(A =_\alpha B\)
1. \(A \equiv x,\ B \equiv x\) --- одна и та же переменная
2. \(A \equiv P\ Q,\ B \equiv R\ S \quad P =_\alpha R,\ Q =_\alpha S\)
3. \(A \equiv \lambda x. P,\ B \equiv \lambda y. Q\). Существует \(t\) --- новая переменная, что \(P[x \coloneqq t] =_\alpha Q[y \coloneqq t]\)
#+end_definition

#+begin_definition org
\-
- свободные вхождения
- свобода для подстановки \\
  \(A[x \coloneqq B]\). Никакое свободное вхождение переменных в \(B\),
  не станет связным после подстановки
- замена свободных вхождений \(A[x \coloneqq B]\)
#+end_definition

#+begin_examp org
Парадокс
\begin{array}{lll}
  1. & \Phi_A \supset \Phi_A &  \\
  2. & \Phi_A \supset (\Phi_A \supset A) & \\
  3. & \Phi_A \supset (\Phi_A \supset A) \supset (\Phi_A \supset A) & \\
  4. & \Phi_A \supset A  & \\
  5. & (\Phi_A \supset A) \supset \Phi_A &  \\
  6. & \Phi_A &
\end{array}
#+end_examp

#+begin_definition org
*Типовые переменные*:
- \(\alpha, \beta, \gamma\) --- атомарные
- \(\tau, \sigma\) --- составные
*Тип*: \(\tau ::= (\tau \to \tau)\ |\ \alpha\) \\
_Следует_:
- 2 традиции:
  1. Исчисление по Черчу
  2. Исчисление по Карри
#+end_definition

#+NAME: Общие определения бета-редукция
#+begin_definition org
\-
- \(\Gamma \vdash A: \tau\) (\(\Gamma \vdassh A^\tau\)), где \(\Gamma\) --- \(\{x_1: \tau_1,\ x_2:\tau_2, \dots\}\)
- правила:
  1. \[ \frac{}{\Gamma, x_1: \tau_1 \vdash x_1:\tau_1} \quad x_1 \not\in Fv(\Gamma) \quad \text{(Ax.)} \]
  2. \[ \frac{\Gamma \vdash A : \sigma \to \tau \quad \Gamma \vdash B: \sigma}{\Gamma \vdash A\ B : \tau} \]
  3. \[ \frac{\Gamma, x: \tau \vdassh A : \sigma}{\Gamma \vdash \lambda x. A : \tau \to \sigma} \]
#+end_definition

#+NAME: Комбинаторы_I
#+begin_examp org
Комбинатор \(I\) (Identity). Доказательство того, что (\(\to_\beta\)) не
обладает ромбовидным свойством:
\[ I = \lambda x. x \]
\begin{center}
\begin{tikzpicture}
  \node (A) at (0, 0) {\((I\ I)\ (I\ I)\)};
  \node (B) at (-1, -1) {\(I\ (I\ I)\)};
  \node (C) at (1, -1) {\((I\ I)\ I\)};
  \node (D) at (1, -2) {\(I\ I\)};
  \node (E) at (-1, -2) {\(I\ I\)};
  \node (F) at (0, -3) {\(I\)};

  \path[->] (A) edge (B);
  \path[->] (A) edge (C);
  \path[->] (B) edge (E);
  \path[->] (C) edge (D);
  \path[->] (D) edge (F);
  \path[->] (E) edge (F);
\end{tikzpicture}
\end{center}
#+end_examp

#+NAME: Комбинаторы_I_K_Omega
#+begin_remark org
\[ I = \lambda x. x \quad K = \lambda x. \lambda y. x \quad \Omega = \omega\ \omega \quad \omega = \lambda x. x\ x \]
\begin{center}
\begin{tikzpicture}
  \node (A) at (0, 0) {\(KI\Omega\)};
  \node (B) at (0, -1) {\(((\lambda x. \lambda y. x)\ I)\ \Omega\)};
  \node (C) at (0, -2) {\((\lambda y. I)\ \Omega\)};
  \node (D) at (0, -3) {\(I\)};

  \path[->] (A) edge (B);
  \path[->] (B) edge (C);
  \path[->] (C) edge (D);
  \path[->] (B) edge[loop right] (B);
\end{tikzpicture}
\end{center}
#+end_remark


#+NAME: Комбинаторы_I_K_Omega_2
#+begin_examp org
\[ \Omega = (\lambda x. x\ x)\ (\lambdax.x\ x) \]
Применимо только правило 2. Не имеет типа
#+end_examp

#+NAME: Теорема Чёрча-Россера_romb
#+begin_definition org
Будем говорить что отношение \(R\) обладает *ромбовидным* свойством,
если для любых \(a, b, c\)
1. \(aRb,\ aRc\)
2. \(b \neq c\)
Существует \(d\): \(bRd,\ cRd\)
#+end_definition

#+begin_remark org
Не выполняется на натуральных числах
#+end_remark

#+NAME: Теорема Чёрча-Россера_def
#+begin_definition org
*\beta-редуциремость* \((\twoheadrightarrow_\beta)\) --- рефлексивное, транзитивное замыкание \((\to_\beta)\)
#+end_definition

#+NAME: Теорема Чёрча-Россера
#+ATTR_LATEX: :options [Черча-Россера]
#+begin_theorem org
Если \(\Gamma \vdash A:\tau\), то любое подвыражение имеет тип
#+end_theorem

#+NAME: Параллельная бета-редукция
#+begin_definition org
*Параллельная \beta-редукция* \((\rightrightarrows_\beta)\) это \((\to_\beta) +\)правило:
- 0. :: \(A =_\alpha B\)
- 1. :: \(A \equiv P\ Q,\ B \equiv R\ S\) и \(P \rightrightarrows_\beta R\) и \(Q \rightrightarrows_\beta S\)
- 2,3. :: аналогично \((\to_\beta)\)
#+end_definition

#+begin_lemma org
\((\rightrightarrows_\beta)\) --- обладает ромбовидными свойством
#+end_lemma

#+begin_lemma org
Если \(R\) --- обладает ромбовидным свойством, то \(R^*\) (транзитивное, рефлексивное замыкание) --- обладает ромбовидным свойством
#+end_lemma

#+begin_lemma org
\((\rightrightarrows_\beta) \subseteq (\twoheadrightarrow_\beta)\)
#+end_lemma

#+ATTR_LATEX: :options [Доказательство Теоремы]
#+begin_proof org
Рассмотрим случай: если выражение типизируется, значит используется одно из правил:
1. \(\Gamma \vdash A:\tau\) используется 1 правило \(\frac{}{\Gamma, a:\tau \vdash a:\tau}\)
_Переход_: \\
пусть любое выражение короче \(n\) символов обладает
свойством. Покажем что этим свойством обладает выражение \(A\) длины
\\
\todo
#+end_proof
#+ATTR_LATEX: :options [Subject reduction]
#+begin_theorem org
\(\Gamma \vdash A: \sigma\) и \(A \twoheadrightarrow_\beta B\) \\
_Тогда_ \(\Gamma \vdash B: \sigma\)
#+end_theorem
#+begin_proof org
\(A \to_\beta B\)
случаи:
1. \(\lambda x. A \to \lambda x. B\)
2. \(A\ B \to A'\ B'\)
3. \((\lambda x. A)\ B \to A[x \coloneqq B]\)
#+end_proof

#+NAME: Нормальный порядок редукций
#+begin_definition org
*Нормальный порядок редукции* --- редукция самого левого \(\beta\)-редекса
#+end_definition

#+NAME: Аппликативный порядок редукций
#+begin_definition org
*Аппликативный порядок редукции* --- редукция самого левого \(\beta\)-редекса из самых вложенных
#+end_definition

#+NAME: Теорема о выразительной силе просто типизированного лямбда-исчисления (формулировка)
#+begin_theorem org
Если конекст \(\Gamma\) и выражение \(P\) типизируется, то \(\Gamma \vdash_4 P: \sigma\)
#+end_theorem
#+begin_examp org
\[\vdash_C \lambda x. x : \alpha \to \alpha (\beta \to \beta)\]
\[ \vdash_4 \lambda x. x : \sigma \to \sigma \]
#+end_examp

#+begin_examp org
\[ \lambda f. \lambda x. f\ (f\ x) : \substack{(\alpha \to \alpha) \to (\alpha \to \alpha) \\ (\beta \to \beta) \to (\beta \to \beta)} \]
\[ \lambda f^{\alpha \to \alpha}. \lambda x.^\alpha. f\ (f\ x) : (\alpha \to \alpha) \to (\alpha \to \alpha) \]

#+end_examp
